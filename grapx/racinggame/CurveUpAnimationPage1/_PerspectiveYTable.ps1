# Load System.Drawing for bitmap processing
Add-Type -AssemblyName System.Drawing

# Function to scan bitmap at x=0 for green pixel (30, 200, 30)
function Get-GreenPixelY {
    param (
        [string]$bmpPath
    )
    try {
        $bmp = [System.Drawing.Bitmap]::FromFile($bmpPath)
        for ($y = 0; $y -lt $bmp.Height; $y++) {
            $pixel = $bmp.GetPixel(0, $y)
            if ($pixel.R -eq 30 -and $pixel.G -eq 200 -and $pixel.B -eq 30) {
                $bmp.Dispose()
                return $y - 47 # Subtract 47 from the y-coordinate
            }
        }
        $bmp.Dispose()
        Write-Host "Green pixel (30, 200, 30) not found in $bmpPath"
        return $null
    }
    catch {
        Write-Host "Error reading bitmap file: $_"
        return $null
    }
}

# Loop over bitmap files 0.bmp to 10.bmp
for ($i = 0; $i -le 59; $i++) {
    # Input and output file names
    $bmpFile = "$i.bmp"
    $outputFile = "$i.asm"

    # Get the target y-value from the bitmap
    $targetY = Get-GreenPixelY -bmpPath $bmpFile

    if ($null -eq $targetY) {
        Write-Host "Cannot generate output file $outputFile due to missing or invalid green pixel in $bmpFile."
        continue
    }

    # Header comment
    "; Perspective Y table generated by PowerShell script for $bmpFile" | Out-File -Encoding ascii $outputFile

    # Calculate coefficients to ensure y=207 at z=0 and y=targetY at z=21831
    $k = (207 - $targetY) / 134.315
    $C = 207 - ($k * 157.9)
    $A = $k * 588842

    # Loop to generate exactly 324 values
    $step = 21831 / (324 - 1) # Step size to get 324 values from z=0 to z=21831
    for ($j = 0; $j -lt 324; $j++) {
        $z = $j * $step
        $y = [math]::Floor($A / ($z + 3727) + $C)
        "db $y" | Add-Content -Encoding ascii -Path $outputFile
    }

    Write-Host "File '$outputFile' generated successfully."
}